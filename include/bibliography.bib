@article{Shen2017,
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {1707.01217},
  primaryClass = {cs, stat},
  langid = {english},
  title = {Wasserstein {{Distance Guided Representation Learning}} for {{Domain Adaptation}}},
  url = {http://arxiv.org/abs/1707.01217},
  abstract = {Domain adaptation aims at generalizing a high-performance learner on a target domain via utilizing the knowledge distilled from a source domain which has a different but related data distribution. One solution to domain adaptation is to learn domain invariant feature representations while the learned representations should also be discriminative in prediction. To learn such representations, domain adaptation frameworks usually include a domain invariant representation learning approach to measure and reduce the domain discrepancy, as well as a discriminator for classiﬁcation. Inspired by Wasserstein GAN, in this paper we propose a novel approach to learn domain invariant feature representations, namely Wasserstein Distance Guided Representation Learning (WDGRL). WDGRL utilizes a neural network, denoted by the domain critic, to estimate empirical Wasserstein distance between the source and target samples and optimizes the feature extractor network to minimize the estimated Wasserstein distance in an adversarial manner. The theoretical advantages of Wasserstein distance for domain adaptation lie in its gradient property and promising generalization bound. Empirical studies on common sentiment and image classiﬁcation adaptation datasets demonstrate that our proposed WDGRL outperforms the state-of-the-art domain invariant representation learning approaches.},
  urldate = {2019-06-03},
  date = {2017-07-05},
  keywords = {Computer Science - Machine Learning,Statistics - Machine Learning},
  author = {Shen, Jian and Qu, Yanru and Zhang, Weinan and Yu, Yong},
  file = {/usr/stud/brechet/Zotero/storage/A6JYP32H/Shen et al. - 2017 - Wasserstein Distance Guided Representation Learnin.pdf}
}

@preamble{ "\ifdefined\DeclarePrefChars\DeclarePrefChars{'’-}\else\fi " }

